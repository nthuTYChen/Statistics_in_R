norm.sample.ord[501]
norm.sample[247] #median = 299
#mean of the sample
sum(norm.sample)/length(norm.sample) #mean = 299.625
#SD of the sample
norm.sample.diff = norm.sample-norm.sample.mean
ss.norm = sum(norm.sample.diff^2)
sd.norm = sqrt(ss.norm/ (length(norm.sample.diff)-1)) #SD = 51.14507
#Task II
norm.sample.mean = mean(norm.sample)
norm.sample.sd = sd(norm.sample)
norm.sample.sd25 = subset(norm.sample,
norm.sample.mean - norm.sample.sd*2.5 &
norm.sample.mean + norm.sample.sd*2.5)
length(norm.sample.sd25) #the number of extreme values = 1000
length()
source("https://lngproc.fl.nthu.edu.tw/statisticsR/Week2/AssignmentII.R")
#Part 1
#Task 1
head(dist.sample)
#Task 2
dist.sample.den = density(dist.sample)
plot(dist.sample.den, main = "Sample Distribution")
abline(v = mean(dist.sample), col="red", lwd = 1.5)
abline(v = mean(dist.sample) + sd(dist.sample), col="green", lwd = 1.5)
abline(v = mean(dist.sample) - sd(dist.sample), col="green", lwd = 1.5)
#Task 3
qqnorm(dist.sample, main = "Sample Q-Q")
qqline(dist.sample, col = "red")
#Task 4
#Task 5
dist.sample.new = dist.sample ^ 0.4
qqnorm(dist.sample.new, main = "New Q-Q")
qqline(dist.sample.new, col = "red")
#Task 1
#median
order(norm.sample)
(norm.sample[247] + norm.sample[180])/2
#mean
sum(norm.sample) / length(norm.sample)
#sd
norm.sample.diff = (norm.sample - mean(norm.sample))^2
sqrt(sum(norm.sample.diff) / (length(norm.sample)-1))
#Task 2
rangeA = mean(norm.sample) + sd(norm.sample)*1.96
rangeB = mean(norm.sample) - sd(norm.sample)*1.96
length(norm.sample[norm.sample > rangeA]) + length(norm.sample[norm.sample < rangeB])
#This group of children is properly sampled because approximately
#5% (54/1000 = 5.4%) of the samples are consider to be extreme values,
#indicating the samples approximates normal distribution.
source("https://lngproc.fl.nthu.edu.tw/statisticsR/Week2/AssignmentII.R")
#Part I
#Task I
head(dist.sample)
#Task II
dist.sample.den = density(dist.sample)
plot(dist.sample.den, main = "Non-Normal Distribution: dist.sample")
abline(v = mean(dist.sample), col = "red", lwd = 1.5)
abline(v = mean(dist.sample) + sd(dist.sample), col = "green", lwd = 1.5, lty = 2)
abline(v = mean(dist.sample) - sd(dist.sample), col = "green", lwd = 1.5, lty = 2)
#Task III
qqnorm(dist.sample, main = "Normal Q-Q Plot: dist.sample")
qqline(dist.sample, col="red")
#Task IV
#Task V
dist.sample.new = dist.sample ^ 0.5
dist.sample.new.den = density(dist.sample.new)
plot(dist.sample.new.den, main = "Normal Distribution: dist.sample.new")
abline(v = mean(dist.sample.new), col = "red", lwd = 1.5)
qqnorm(dist.sample.new, main = "Normal Q-Q Plot: dist.sample.new")
qqline(dist.sample.new, col="red")
median.norm.sample = (norm.sample[order(norm.sample)[length(norm.sample) / 2]] +
norm.sample[order(norm.sample)[length(norm.sample) / 2 + 1]]) / 2
median.norm.sample # median
mean.norm.sample = sum(norm.sample) / length(norm.sample)
mean.norm.sample # mean
sd.norm.sample = (sum((norm.sample - mean.norm.sample) ^ 2) /
(length(norm.sample) - 1)) ^ 0.5
sd.norm.sample # standard deviation
#Task II
df = norm.sample
norm.sample.extreme = c(df[norm.sample > mean.norm.sample + sd.norm.sample*1.96],
df[norm.sample < mean.norm.sample - sd.norm.sample*1.96])
length(norm.sample.extreme)
source("https://lngproc.fl.nthu.edu.tw/statisticsR/Week2/AssignmentII.R")
#Part I
#Task I
head(dist.sample)
#Task II
dist.sample.den = density(dist.sample)
plot(dist.sample.den, main = "Sample Distribution")
abline(v = mean(dist.sample), col = "red")
abline(v = mean(dist.sample) + sd(dist.sample), col = "blue")
abline(v = mean(dist.sample) - sd(dist.sample), col = "green")
#Task III
qqnorm(dist.sample, main = "Q-Q Plot")
qqline(dist.sample, col = "red")
#Task IV
#The density plot resembles right skewed distribution,
#with more data on the right side and the mean to the right of the peak.
#Task V
dist.sample.new = dist.sample ^ 0.5
qqnorm(dist.sample.new, main = "New Q-Q Plot")
qqline(dist.sample.new, col = "red")
#Part II
#Task I
#median
norm.sample.median = (norm.sample[order(500)] + norm.sample[order(501)]) / 2
norm.sample.median
#mean
norm.sample.diff = norm.sample - norm.sample.mean
norm.sample.sd = sqrt(sum(norm.sample.diff ^ 2)/ (length(norm.sample) - 1))
norm.sample.sd
#Task II
extreme.L = norm.sample[norm.sample < norm.sample.mean - norm.sample.sd]
length(extreme.L)
extreme.R = norm.sample[norm.sample > norm.sample.mean + norm.sample.sd]
length(extreme.R)
pnorm(-1)
pnorm(-1) * 2
source("https://lngproc.fl.nthu.edu.tw/statisticsR/Week2/AssignmentII.R")
##### Part I ######
### Task I
head(dist.sample)
### Task II
dist.sample.den <- density(dist.sample)
plot(dist.sample.den, main = "sample")
abline(v = mean(dist.sample), col="pink")
abline(v = mean(dist.sample) + sd(dist.sample), col="green", lty=2)
abline(v = mean(dist.sample) - sd(dist.sample), col="green", lty=2)
### Task III
qqnorm(dist.sample, main = "Q-Q plot: sample")
qqline(dist.sample, col="red")
### Task IV
# The plot suggests right skewness
#   because the dots at the right end is not near the ideal correlation line.
#   The left end shows a similar situation,
#   but compared to the dots on the right end,
#   the dots on the lift end is nearer to the Q-Q line.
### Task V
# square all the data in dist.sample
dist.sample.sqrt <- sqrt(dist.sample)
qqnorm(dist.sample.sqrt, main = "squared sample")
qqline(dist.sample.sqrt, col="red")
### Task I
head(norm.sample)
norm.ordered <- order(norm.sample)
norm.median <- 0.5*(norm.sample[norm.ordered[500]] + norm.sample[norm.ordered[501]])
norm.mean <- sum(norm.sample)/1000
norm.SD <- sqrt(var(norm.sample))
norm.median
norm.mean
norm.SD
### Task II
# Get the extreme values (as Boolean vector)
# The extreme values on the right end
norm.Rextreme <- norm.sample-(norm.mean+norm.SD)>0
# The extreme values on the left end
norm.Lextreme <- (norm.mean-norm.SD)-norm.sample>0
# Calculate how much extreme numbers are in the whole data set
length(norm.sample[norm.Rextreme])
length(norm.sample[norm.Lextreme])
85*.95
source("https://lngproc.fl.nthu.edu.tw/statisticsR/Week2/AssignmentII.R")
# Part I ####
# Task I
head(dist.sample)
# Task II
dens.dist.sample = density(dist.sample)
plot(dens.dist.sample, main = "Distribution: dist.sample")
abline(v = mean(dist.sample), col = "red", lwd = 1.5) # mean
abline(v = mean(dist.sample) - sd(dist.sample), col = "green", lwd = 1.5, lty = 2) # -1 SD
abline(v = mean(dist.sample) + sd(dist.sample), col = "green", lwd = 1.5, lty = 2) # +1 SD
# Task III
qqnorm(dist.sample, main = "Normal Q-Q Plot: dist.sample")
qqline(dist.sample, col = "red", lwd = 1.5)
# Task V
dist.sample.new = sqrt(dist.sample)
qqnorm(dist.sample.new, main = "Normal Q-Q Plot: dist.sample.new")
qqline(dist.sample.new, col = "red", lwd = 1.5)
# Part II ####
# Task I
head(norm.sample)
# median
ord.tag = order(norm.sample, decreasing = F) # generate vector for position number
norm.sample.ord = norm.sample[ord.tag]
median.norm.sample = (norm.sample.ord[500] + norm.sample.ord[501]) / 2
median.norm.sample # Ans
# mean
mean.norm.sample = sum(norm.sample) / 1000
mean.norm.sample # Ans
# SD
ss.norm.sample = sum((norm.sample - mean.norm.sample) ^ 2) # sum of squares
var.norm.sample = ss.norm.sample / (1000 - 1) # variance
sd.norm.sample = sqrt(var.norm.sample) # sd
sd.norm.sample # Ans
# Task II
norm.sample.extreme =
norm.sample[norm.sample < (mean.norm.sample - 1.96 * sd.norm.sample) |
norm.sample > (mean.norm.sample + 1.96 * sd.norm.sample)]
length(norm.sample.extreme) # 54
source("https://lngproc.fl.nthu.edu.tw/statisticsR/Week2/AssignmentII.R")
#part1
#task1
dist.sample
head(dist.sample)
#task2
dist.sample.den = density(dist.sample)
plot(dist.sample.den, main= "sample")
abline(v = mean(dist.sample), col ="red", lwd =1.5)
dist.sample.diff = dist.sample - mean(dist.sample)
ss.sample = sum(dist.sample.diff^2)
ss.sample
sd.norm = sqrt(ss.sample/ (length(dist.sample.diff)-1))
#task3
qqnorm(dist.sample, main= "Q-Qplot: dist.sample")
qqline(dist.sample, col="red")
#task4
#the plot is skewR
#task5
dist.sample.new = dist.sample ^ 1/3
abline(v = mean(dist.sample.new), col ="blue", lwd =1.5)
qqnorm(dist.sample.new, main= "Q-Qplot: dist.sample.new")
qqline(dist.sample.new, col="blue")
norm.sample
head(norm.sample)
norm.sample.df = as.data.frame(norm.sample)
head(norm.sample.df)
colnames(norm.sample.df) = c("Count")
sum(norm.sample.df$Count)
order(norm.sample$Count, decreasing = T)
head(order(norm.sample))
order(norm.sample.df$Count, decreasing = T)
count.des.ord= order(norm.sample.df$Count, decreasing= T)
norm.sample.ord = norm.sample.df[count.des.ord, ]
head(norm.sample.ord)
summary(norm.sample)
source("https://lngproc.fl.nthu.edu.tw/statisticsR/Week2/AssignmentII.R")
# Part I
# Task I
head(dist.sample)
# Task II
dist.sample.den = density(dist.sample)
plot(dist.sample.den, main = "Sample Distribution")
abline(v = mean(dist.sample), col = "red", lwd = 1.5)
abline(v = mean(dist.sample) + sd(dist.sample), col = "green", lwd = 1.5, lty = 2)
abline(v = mean(dist.sample) - sd(dist.sample), col = "green", lwd = 1.5, lty = 2)
# Task III
qqnorm(dist.sample, main = "Sample Q-Q Plot")
qqline(dist.sample, col = "red")
# Task IV
# The plot suggests right skewness.
# The right of the peak has a longer tail.
# Also in the Q-Q plot the higher end of the distribution
# are far away from the Q-Q line than the lower end.
# Task V
dist.sample.new = dist.sample ^ 0.5
qqnorm(dist.sample.new, main = "New Sample Q-Q Plot")
qqline(dist.sample.new, col = "red")
# Part II
# Task I
norm.des.ord = order(norm.sample, decreasing = T)
norm.sample.order = norm.sample[norm.des.ord]
norm.sample.median = (norm.sample.order[500] + norm.sample.order[501]) / 2
norm.sample.median
norm.sample.mean = sum(norm.sample) / length(norm.sample)
norm.sample.diff = norm.sample - norm.sample.mean
ss.norm.sample = sum(norm.sample.diff^2)
sd.norm.sample = sqrt(ss.norm.sample / (length(norm.sample.diff) - 1))
# Task II
norm.sample[norm.sample > mean(norm.sample) + 1.96 * sd(norm.sample)]
norm.sample[norm.sample < mean(norm.sample) - 1.96 * sd(norm.sample)]
length(norm.sample[norm.sample > mean(norm.sample) + 1.96 * sd(norm.sample)]) +
length(norm.sample[norm.sample < mean(norm.sample) - 1.96 * sd(norm.sample)])
# The proportion of the extreme values is 5.4%, which is close to 5%.
# So this group of children are properly sampled from the population.
#Part 1
#Task I
source("http://lngproc.fl.nthu.edu.tw/statisticsR/Week2/AssignmentII.R")
head(dist.sample)
#Task II
dist.sample.den=density(dist.sample)
plot(dist.sample.den, main = "dist.sample with mean and +-1SD")
abline(v=mean(dist.sample), col="red", lwd= 1.5)
abline(v= mean(dist.sample)+sd(dist.sample), col= "green", lwd=1.5, lty=2)
abline(v= mean(dist.sample)-sd(dist.sample), col= "green", lwd=1.5, lty=2)
#Task III
qqnorm(dist.sample, main = "Q-Q Plot: dist.sample")
qqline(dist.sample, col="red")
#Task IV
#The plots suggests right skewness of the data distribution since they
#are obvious deviations from the ideal correlation line toward the end of
#the distribution, suggesting that some numbers are higher than normal
#distribution.
#Task V
dist.sample.new=sqrt(dist.sample)
qqnorm(dist.sample.new, main="Q-Q Plot: dist.sample.new")
qqline(dist.sample.new, col="red")
#Part II
#Task I
head(norm.sample)
order(norm.sample)
#median
count.des.ord=order(norm.sample, decreasing = T)
norm.sample.ord=norm.sample[count.des.ord]
norm.sample.ord[500]
#mean
norm.sample.mean=sum(norm.sample)/length(norm.sample)
#sd
norm.sample.diff= norm.sample-norm.sample.mean
ss.norm=sum(norm.sample.diff^2)
sd.norm=sqrt(ss.norm/(length(norm.sample.diff)-1))
#Task II
length(pnorm(norm.sample, mean = 0, sd=2, lower.tail = FALSE))
length(pnorm(norm.sample, mean = 0, sd=2, lower.tail = TRUE))
#this group of children are properly sampled from the population because
#the number of values are both 1000 in upper tail and lower tail.
sd.norm
norm.sample.mean
norm.sample.mean
sd(norm.sample)
s.huh = sum(norm.sample ^ 2) /
(length(norm.sample) - 1) - mean(norm.sample) ^ 2
s.huh
s.huh = sqrt(sum(norm.sample ^ 2) /
(length(norm.sample) - 1) - mean(norm.sample) ^ 2)
s.huh
library(languageR)
head(durationsOnt)
library(reshape)
head(melt(durationsOnt, Sex ~ DurationPrefixNasal))
head(melt(Sex, durationsOnt[c("Sex", "DurationPrefixVowel", "DurationPrefixNasal", "DurationalPrefixPlosive")])
)
?melt
head(melt(durationsOnt[c("Sex", "DurationPrefixVowel", "DurationPrefixNasal", "DurationalPrefixPlosive")], Sex))
head(melt(durationsOnt[c("Sex", "DurationPrefixVowel", "DurationPrefixNasal", "DurationPrefixPlosive")], Sex))
head(melt(durationsOnt[c("Sex", "DurationPrefixVowel", "DurationPrefixNasal", "DurationPrefixPlosive")], id.vars = "Sex"))
levels(as.factor(durationsOnt$Word))
Myers.sample = loadCourseCSV("Week3-4", "Myers_2015_Sample.csv")
# Remove responses with an invalid RT and log-transform the rest of the RTs
Myers.resp = subset(Myers.sample, RT > 0)
Myers.resp$logRT = log(Myers.resp$RT)
# Divide the sample data set into two subsets by Session
Myers.s1 = subset(Myers.sample, Session == 1)
Myers.s2 = subset(Myers.sample, Session == 2)
source("https://lngproc.fl.nthu.edu.tw/statisticsR/courseUtil.R")
Myers.sample = loadCourseCSV("Week3-4", "Myers_2015_Sample.csv")
# Remove responses with an invalid RT and log-transform the rest of the RTs
Myers.resp = subset(Myers.sample, RT > 0)
Myers.resp$logRT = log(Myers.resp$RT)
# Divide the sample data set into two subsets by Session
Myers.s1 = subset(Myers.sample, Session == 1)
Myers.s2 = subset(Myers.sample, Session == 2)
summary(Myers.s1)
summary(Myers.s1$RT)
summary(Myers.s1$logRT)
Myers.s1 = subset(Myers.resp, Session == 1)
Myers.s2 = subset(Myers.resp, Session == 2)
# Get the distributional properties of RT for each subset
summary(Myers.s1$logRT)
summary(Myers.s2$logRT)
7.377 - 6.229
7.416 - 6.394
7.377 + 1.148 * 1.5
6.229 - 1.148 * 1.5
7.416 + 1.022 * 1.5
6.394 – 1.022 * 1.5
6.394 - 1.022 * 1.5
set.seed(555)
sim.x.a = data.frame(Value = rnorm(50, 1, 1), VarX = "A", VarY = "A", Interaction = "Enhanced/Reduced")
sim.x.b = data.frame(Value = rnorm(50, 1.2, 1), VarX = "B", VarY = "A", Interaction = "Enhanced/Reduced")
sim.y.a = data.frame(Value = rnorm(50, 0.8, 1), VarX = "A", VarY = "B", Interaction = "Enhanced/Reduced")
sim.y.b = data.frame(Value = rnorm(50, 1.3, 1), VarX = "B", VarY = "B", Interaction = "Enhanced/Reduced")
sim.enhanced = rbind(sim.x.a, sim.x.b, sim.y.a, sim.y.b)
sim.x.a = data.frame(Value = rnorm(50, 1, 1), VarX = "A", VarY = "A", Interaction = "Opposite")
sim.x.b = data.frame(Value = rnorm(50, 1.2, 1), VarX = "B", VarY = "A", Interaction = "Opposite")
sim.y.a = data.frame(Value = rnorm(50, 1.1, 1), VarX = "A", VarY = "B", Interaction = "Opposite")
sim.y.b = data.frame(Value = rnorm(50, 0.7, 1), VarX = "B", VarY = "B", Interaction = "Opposite")
sim.opposite = rbind(sim.x.a, sim.x.b, sim.y.a, sim.y.b)
sim.x.a = data.frame(Value = rnorm(50, 1, 1), VarX = "A", VarY = "A", Interaction = "None")
sim.x.b = data.frame(Value = rnorm(50, 1.2, 1), VarX = "B", VarY = "A", Interaction = "None")
sim.y.a = data.frame(Value = rnorm(50, 1.1, 1), VarX = "A", VarY = "B", Interaction = "None")
sim.y.b = data.frame(Value = rnorm(50, 1.3, 1), VarX = "B", VarY = "B", Interaction = "None")
sim.none = rbind(sim.x.a, sim.x.b, sim.y.a, sim.y.b)
sim.all = rbind(sim.enhanced, sim.opposite, sim.none)
library(ggplot2)
ggplot(sim.all, aes(x = VarX, y = Value, fill = VarY)) +
geom_boxplot() + facet_grid(~ Interaction) +
labs(title = "Figure 3. Interaction Types", x = "Variable X", y = "Value", fill = "Variable Y") +
theme_bw()
# Figure 3
set.seed(555)
sim.x.a = data.frame(Value = rnorm(50, 1, 1), VarX = "A", VarY = "A", Interaction = "Enhanced/Reduced")
sim.x.b = data.frame(Value = rnorm(50, 1.2, 1), VarX = "B", VarY = "A", Interaction = "Enhanced/Reduced")
sim.y.a = data.frame(Value = rnorm(50, 0.8, 1), VarX = "A", VarY = "B", Interaction = "Enhanced/Reduced")
sim.y.b = data.frame(Value = rnorm(50, 1.3, 1), VarX = "B", VarY = "B", Interaction = "Enhanced/Reduced")
sim.enhanced = rbind(sim.x.a, sim.x.b, sim.y.a, sim.y.b)
sim.x.a = data.frame(Value = rnorm(50, 1, 1), VarX = "A", VarY = "A", Interaction = "Opposite")
sim.x.b = data.frame(Value = rnorm(50, 1.2, 1), VarX = "B", VarY = "A", Interaction = "Opposite")
sim.y.a = data.frame(Value = rnorm(50, 1.1, 1), VarX = "A", VarY = "B", Interaction = "Opposite")
sim.y.b = data.frame(Value = rnorm(50, 0.7, 1), VarX = "B", VarY = "B", Interaction = "Opposite")
sim.opposite = rbind(sim.x.a, sim.x.b, sim.y.a, sim.y.b)
sim.x.a = data.frame(Value = rnorm(50, 1, 1), VarX = "A", VarY = "A", Interaction = "None")
sim.x.b = data.frame(Value = rnorm(50, 1.4, 1), VarX = "B", VarY = "A", Interaction = "None")
sim.y.a = data.frame(Value = rnorm(50, 1.3, 1), VarX = "A", VarY = "B", Interaction = "None")
sim.y.b = data.frame(Value = rnorm(50, 1.7, 1), VarX = "B", VarY = "B", Interaction = "None")
sim.none = rbind(sim.x.a, sim.x.b, sim.y.a, sim.y.b)
sim.all = rbind(sim.enhanced, sim.opposite, sim.none)
ggplot(sim.all, aes(x = VarX, y = Value, fill = VarY)) +
geom_boxplot() + facet_grid(~ Interaction) +
labs(title = "Figure 3. Interaction Types", x = "Variable X", y = "Value", fill = "Variable Y") +
theme_bw()
set.seed(555)
sim.x.a = data.frame(Value = rnorm(50, 1, 1), VarX = "A", VarY = "A", Interaction = "Enhanced/Reduced")
sim.x.b = data.frame(Value = rnorm(50, 2, 1), VarX = "B", VarY = "A", Interaction = "Enhanced/Reduced")
sim.y.a = data.frame(Value = rnorm(50, 1.3, 1), VarX = "A", VarY = "B", Interaction = "Enhanced/Reduced")
sim.y.b = data.frame(Value = rnorm(50, 1.5, 1), VarX = "B", VarY = "B", Interaction = "Enhanced/Reduced")
sim.enhanced = rbind(sim.x.a, sim.x.b, sim.y.a, sim.y.b)
sim.x.a = data.frame(Value = rnorm(50, 1, 1), VarX = "A", VarY = "A", Interaction = "Opposite")
sim.x.b = data.frame(Value = rnorm(50, 2, 1), VarX = "B", VarY = "A", Interaction = "Opposite")
sim.y.a = data.frame(Value = rnorm(50, 2.2, 1), VarX = "A", VarY = "B", Interaction = "Opposite")
sim.y.b = data.frame(Value = rnorm(50, 1.3, 1), VarX = "B", VarY = "B", Interaction = "Opposite")
sim.opposite = rbind(sim.x.a, sim.x.b, sim.y.a, sim.y.b)
sim.x.a = data.frame(Value = rnorm(50, 1, 1), VarX = "A", VarY = "A", Interaction = "None")
sim.x.b = data.frame(Value = rnorm(50, 2, 1), VarX = "B", VarY = "A", Interaction = "None")
sim.y.a = data.frame(Value = rnorm(50, 1.5, 1), VarX = "A", VarY = "B", Interaction = "None")
sim.y.b = data.frame(Value = rnorm(50, 2.5, 1), VarX = "B", VarY = "B", Interaction = "None")
sim.none = rbind(sim.x.a, sim.x.b, sim.y.a, sim.y.b)
sim.all = rbind(sim.enhanced, sim.opposite, sim.none)
ggplot(sim.all, aes(x = VarX, y = Value, fill = VarY)) +
geom_boxplot() + facet_grid(~ Interaction) +
labs(title = "Figure 3. Interaction Types", x = "Variable X", y = "Value", fill = "Variable Y") +
theme_bw()
# Figure 3
set.seed(555)
sim.x.a = data.frame(Value = rnorm(50, 1, 1), VarX = "A", VarY = "A", Interaction = "Enhanced/Reduced")
sim.x.b = data.frame(Value = rnorm(50, 1.3, 1), VarX = "B", VarY = "A", Interaction = "Enhanced/Reduced")
sim.y.a = data.frame(Value = rnorm(50, 2, 1), VarX = "A", VarY = "B", Interaction = "Enhanced/Reduced")
sim.y.b = data.frame(Value = rnorm(50, 1.5, 1), VarX = "B", VarY = "B", Interaction = "Enhanced/Reduced")
sim.enhanced = rbind(sim.x.a, sim.x.b, sim.y.a, sim.y.b)
sim.x.a = data.frame(Value = rnorm(50, 1, 1), VarX = "A", VarY = "A", Interaction = "Opposite")
sim.x.b = data.frame(Value = rnorm(50, 2, 1), VarX = "B", VarY = "A", Interaction = "Opposite")
sim.y.a = data.frame(Value = rnorm(50, 2.2, 1), VarX = "A", VarY = "B", Interaction = "Opposite")
sim.y.b = data.frame(Value = rnorm(50, 1.3, 1), VarX = "B", VarY = "B", Interaction = "Opposite")
sim.opposite = rbind(sim.x.a, sim.x.b, sim.y.a, sim.y.b)
sim.x.a = data.frame(Value = rnorm(50, 1, 1), VarX = "A", VarY = "A", Interaction = "None")
sim.x.b = data.frame(Value = rnorm(50, 2, 1), VarX = "B", VarY = "A", Interaction = "None")
sim.y.a = data.frame(Value = rnorm(50, 1.5, 1), VarX = "A", VarY = "B", Interaction = "None")
sim.y.b = data.frame(Value = rnorm(50, 2.5, 1), VarX = "B", VarY = "B", Interaction = "None")
sim.none = rbind(sim.x.a, sim.x.b, sim.y.a, sim.y.b)
sim.all = rbind(sim.enhanced, sim.opposite, sim.none)
ggplot(sim.all, aes(x = VarX, y = Value, fill = VarY)) +
geom_boxplot() + facet_grid(~ Interaction) +
labs(title = "Figure 3. Interaction Types", x = "Variable X", y = "Value", fill = "Variable Y") +
theme_bw()
setwd("D:/OneDrive/Documents/Academic Works/NTHU/Courses/Language and Statistics in R/GitHub/Statistics_in_R/Week10-11")
chen.sample = loadCourseCSV("Week10-11", "Chen2020Sample.csv")
source("https://lngproc.fl.nthu.edu.tw/statisticsR/courseUtil.R")
chen.sample = loadCourseCSV("Week10-11", "Chen2020Sample.csv")
str(chen.sample)
chen.aov = (formula = Accept ~ Group * InitialTone, data = chen.sample)
# The following formula works in the same way
# aov(formula = Accept ~ Group + InitialTone + Group:InitialTone,
#									data = chen.sample)
summary(chen.aov)
chen.aov = (formula = Accept ~ Group * InitialTone, data = chen.sample)
chen.aov = (formula = Accept ~ Group * InitialTone, data = chen.sample)
chen.aov = aov(formula = Accept ~ Group * InitialTone, data = chen.sample)
summary(chen.aov)
df(7.029, 1, 6140)
df(7.029, 1, 6140) * 2
?df
pf(7.029, 1, 6140)
pf(7.029, 1, 6140, lower.tail = F)
chen.sample = read.csv("https://lngproc.fl.nthu.edu.tw/statisticsR/Week10-11/Chen2020Sample.csv", fileEncoding = "UTF-8-BOM")
chen.avg = aggregate(Accept ~ Group + InitialTone, FUN = mean, data = chen.sample)
chen.avg = aggregate(Accept ~ participant + Group + InitialTone, FUN = mean, data = chen.sample)
head(chen.avg)
ggplot(chen.avg, aes(x = Group, y = Accept, color = InitialTone)) +
geom_boxplot() + scale_y_continuous(limits = c(0, 1)) +
labs(title = "Figure 4. Acceptance Probability by Initial Tone across Groups", x = "Group",
y = "Acceptance Probability (averaged within subjects)", color = "Initial Tone",
subtitle = "Source: Chen (2020)") + theme_bw()
ggplot(chen.avg, aes(x = Group, y = Accept, fill = InitialTone)) +
geom_boxplot() + scale_y_continuous(limits = c(0, 1)) +
labs(title = "Figure 4. Acceptance Probability by Initial Tone across Groups", x = "Group",
y = "Acceptance Probability (averaged within subjects)", fill = "Initial Tone",
subtitle = "Source: Chen (2020)") + theme_bw()
head(chen.sample)
head(chen.avg)
head(subset(chen.avg, group == "NonFinalR"))
head(subset(chen.avg, Group == "NonFinalR"))
subset(chen.avg, Group == "NonFinalR")
tail(chen.sample)
tail(chen.sample, 50)
xtabs(~ Group + InitialTone, data = chen.sample)
chen.sample = read.csv("https://lngproc.fl.nthu.edu.tw/statisticsR/Week10-11/Chen2020Sample.csv", fileEncoding = "UTF-8-BOM")
chen.avg = aggregate(Accept ~ participant + Group + InitialTone, FUN = mean, data = chen.sample)
ggplot(chen.avg, aes(x = Group, y = Accept, fill = InitialTone)) +
geom_boxplot() + scale_y_continuous(limits = c(0, 1)) +
labs(title = "Figure 4. Acceptance Probability by Initial Tone across Groups", x = "Group",
y = "Acceptance Probability (averaged within subjects)", fill = "Initial Tone",
subtitle = "Source: Chen (2020)") + theme_bw()
chen.sample = read.csv("https://lngproc.fl.nthu.edu.tw/statisticsR/Week10-11/Chen2020Sample.csv", fileEncoding = "UTF-8-BOM")
chen.avg = aggregate(Accept ~ participant + Group + InitialTone, FUN = mean, data = chen.sample)
ggplot(chen.avg, aes(x = Group, y = Accept, fill = InitialTone)) +
geom_boxplot() + scale_y_continuous(limits = c(0, 1)) +
labs(title = "Figure 4. Acceptance Probability by Initial Tone across Groups", x = "Group",
y = "Acceptance Probability (averaged within subjects)", fill = "Initial Tone",
subtitle = "Source: Chen (2020)") + theme_bw()
aggregate(Accept ~ Group, FUN = mean, data = chen.sample)
aggregate(Accept ~ InitialTone, FUN = mean, data = chen.sample)
